{"version":3,"sources":["components/navbar.js","components/list.js","components/landing.js","components/search.js","components/categories.js","components/recipe.js","components/refresh.js","components/category.js","components/area.js","components/areas.js","components/ingredients.js","components/ingredient.js","components/about.js","components/routing.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["NavbarHead","props","state","search","enabled","e","this","setState","target","value","undefined","Navbar","bg","variant","expand","fixed","Brand","href","process","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Form","inline","FormControl","type","placeholder","onChange","changed","Button","Component","List","url","catergory","category","data","sliced","parseInt","clicked","idMeals","fetch","then","response","json","meals","idMeal","to","style","margin","justifyContent","border","textAlign","fontWeight","slice","map","datum","onClick","find","src","strMealThumb","alt","strMeal","width","height","Landing","random","showMore","isTrue","console","log","history","push","document","getElementById","remove","arr","more","Search","searched","match","params","window","location","pathname","length","Category","finding","categories","columnGap","heigh","strCategory","strCategoryThumb","borderBottom","strCategoryDescription","Recipe","ingredients","measuring","update","idmeal","strData","JSON","stringify","arrData","parse","chabi","Object","keys","valu","values","allIng","allmeasure","i","marginTop","strArea","strTags","measure","ingred","strInstructions","Refresh","isNaN","CategoryItem","Area","area","Areas","classNmae","Ingredients","ing","strIngredient","strDescription","Ingredient","ingredient","split","join","About","trget","rel","Routing","exact","path","component","Footer","color","App","Boolean","hostname","ReactDOM","render","basename","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19b14081.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport {Navbar, Nav, NavDropdown,Form, FormControl, Button} from 'react-bootstrap';\r\n\r\n\r\nclass NavbarHead extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      search : '',\r\n      enabled : false\r\n    }\r\n  }\r\n  changed(e){\r\n    this.setState({\r\n      search : e.target.value,\r\n    })\r\n\r\n    if(e.target.value===null||e.target.value===\"\"||e.target.value===undefined){\r\n      this.setState({\r\n        enabled : false\r\n      })\r\n    }else{\r\n        this.setState({\r\n          enabled : true\r\n        })\r\n    }\r\n  }\r\n\r\n    render(){\r\n      return(\r\n        <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n          <Navbar.Brand href={process.env.PUBLIC_URL+\"/#/\"}>Title</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href={process.env.PUBLIC_URL+\"/#/about\"}>About</Nav.Link>\r\n              <NavDropdown title=\"Filter By\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href={process.env.PUBLIC_URL+\"/#/categories\"}>Categories</NavDropdown.Item>\r\n                <NavDropdown.Item href={process.env.PUBLIC_URL+\"/#/areas\"}>Area List</NavDropdown.Item>\r\n                <NavDropdown.Item href={process.env.PUBLIC_URL+\"/#/ingredients\"}>Ingredients</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n            <Form inline>\r\n              <FormControl type=\"text\" placeholder=\"Search Recipe\" className=\"mr-sm-2\" value={this.state.search} onChange={(e)=>this.changed(e)} />\r\n              {this.state.enabled ? <Nav.Link href={process.env.PUBLIC_URL+\"/#/refresh/\"+this.state.search}><Button variant=\"outline-light\">Search</Button></Nav.Link> : null}\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      )\r\n    }\r\n}\r\n\r\nexport default NavbarHead;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nclass List extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            url : props.url,\r\n            catergory : props.category,\r\n            data : [],\r\n            sliced: parseInt(props.sliced),\r\n            clicked : false,\r\n            idMeals : \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(this.state.url)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            data: data.meals\r\n        }));\r\n    }\r\n\r\n    find(idMeal){\r\n        //console.log(idMeal);\r\n       // this.props.history.push( '/recipe/'+idMeal);\r\n        this.setState({\r\n            clicked : true,\r\n            idMeals : idMeal\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.clicked){\r\n            return(\r\n                <Redirect to={'/refresh/'+this.state.idMeals}/>\r\n            )\r\n        }\r\n\r\n        if(this.state.data === null || this.state.data==null){\r\n            return (\r\n                <div className=\"mt-5 shadow p-3 mb-5 bg-white rounded text-center\" style={{margin:\"auto\"}}>\r\n                    {this.props.category} not found \r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"col-sm-11 row mt-5 shadow p-3 mb-5 bg-white rounded\"\r\n                style={{margin:\"auto\", justifyContent:\"center\", border:\"1px solid #d3d3d3\", textAlign:\"center\"}}>\r\n                    <h2 className=\"col-sm-12\" style={{fontWeight:\"Bolder\"}}>{this.state.catergory}</h2>\r\n                    {this.state.data.slice(0,parseInt(this.state.sliced)).map((datum)=>(\r\n                        <div className=\"col-sm-3 listHover mt-5\" onClick={()=>this.find(datum.idMeal)}>\r\n                            <img src={datum.strMealThumb} alt={datum.strMeal} style={{width:\"100%\", height:\"auto\", margin:\"0\"}}/>\r\n                            <h4><b>{datum.strMeal}</b></h4>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n    \r\n        \r\n    }\r\n}\r\n\r\nexport default List;","import React, {Component} from 'react';\r\nimport List from './list';\r\nimport {Button} from 'react-bootstrap';\r\n\r\n\r\nclass Landing extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            random:[],\r\n            showMore:[],\r\n            isTrue:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        ////random food\r\n        fetch(\"https://www.themealdb.com/api/json/v1/1/random.php\")\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            random : json.meals[0]\r\n        }));\r\n        \r\n    }\r\n\r\n\r\n    find(idMeal){\r\n        console.log(idMeal);\r\n        this.props.history.push( '/recipe/'+idMeal);\r\n    }\r\n\r\n    showMore(){\r\n            document.getElementById(\"button\").remove();\r\n            const arr = [\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Beef\" category=\"Beef\" sliced=\"4\"/>,\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Chicken\" category=\"Chicken\" sliced=\"4\"/>,\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Pasta\" category=\"Pasta\" sliced=\"4\"/>,\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Vegetarian\" category=\"Vegetarian\" sliced=\"4\"/>\r\n            ]\r\n\r\n            this.setState({\r\n                showMore:arr,\r\n                isTrue: true\r\n            })\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"row\" style={{justifyContent:\"center\"}}>\r\n                <div \r\n                className=\"col-sm-11 row forHover\"\r\n                onClick={()=>this.find(this.state.random.idMeal)}\r\n                >\r\n                    <h1 className=\"col-sm-6\">{this.state.random.strMeal}</h1>\r\n                    <img \r\n                    className=\"col-sm-4\" \r\n                    src={this.state.random.strMealThumb} \r\n                    alt=\"thumbnail\"/>\r\n                </div>\r\n\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Breakfast\" category=\"Breakfast\" sliced=\"4\"/>\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood\" category=\"Seafood\" sliced=\"4\"/>\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Dessert\" category=\"Dessert\" sliced=\"4\"/>\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Starter\" category=\"Starter\" sliced=\"4\"/>\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Side\" category=\"Side\" sliced=\"4\"/>\r\n                \r\n                <div className=\"col-sm-12\" style={{textAlign:\"center\"}}>\r\n                    <Button id=\"button\" onClick={()=>this.showMore()}>Show More</Button>\r\n                </div>\r\n\r\n                {this.state.isTrue ? this.state.showMore.map((more)=>(\r\n                        <div>{more}</div>\r\n                    )):null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, {Component} from 'react';\r\nimport List from './list';\r\n\r\n\r\nclass Search extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:[],\r\n            searched: this.props.match.params.searched\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(window.location.pathname)\r\n        return(\r\n            <div className=\"row\">\r\n                <List url={\"https://www.themealdb.com/api/json/v1/1/search.php?s=\"+this.state.searched} category={this.state.searched} sliced={this.state.data.length-1}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nclass Category extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:[],\r\n            finding:\"\",\r\n            clicked:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://www.themealdb.com/api/json/v1/1/categories.php\")\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            data : json.categories\r\n        }));\r\n    }\r\n\r\n    find(category){\r\n        this.setState({\r\n            finding:category,\r\n            clicked:true\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.clicked){\r\n            return(<Redirect to={\"/category/\"+this.state.finding}/>)\r\n        }\r\n        return(\r\n            <div className=\"row\" style={{margin:\"auto\", justifyContent:\"center\", columnGap:\"2%\"}}>\r\n                {this.state.data.map((datum)=>(\r\n                    <div className=\" listHover card col-sm-5 mt-5 shadow p-3 mb-5 bg-white rounded\" \r\n                    style={{heigh:\"auto\", width:\"100%\"}}\r\n                    onClick={()=>this.find(datum.strCategory)}>\r\n                        <img className=\"card-img-top\" src={datum.strCategoryThumb} alt=\"thumbnail\" style={{width:'100%', height:\"auto\", borderBottom:\"1px solid #D3D3D3\"}}/>\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">{datum.strCategory}</h4>\r\n                            <p className=\"card-text\">{datum.strCategoryDescription}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;","import React, {Component} from 'react';\r\nimport List from './list';\r\n\r\n\r\nclass Recipe extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data : [],\r\n            ingredients : [],\r\n            measuring : [],\r\n            update : false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const idMeal = this.props.match.params.idmeal;\r\n        fetch(\"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\"+idMeal)\r\n        .then(response => response.json())\r\n        .then(json => this.setState({\r\n            data : json.meals[0],\r\n            update : true\r\n        }))\r\n\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.update){\r\n            this.setState({\r\n                update:false\r\n            })\r\n            const strData = JSON.stringify(this.state.data)\r\n            const arrData = JSON.parse(strData)\r\n            const chabi = Object.keys(arrData)\r\n            const valu = Object.values(arrData)\r\n            const allIng= []\r\n            const allmeasure=[]\r\n            //console.log(valu)\r\n            for(let i = 9; i < 29; i++){\r\n                if(valu[i] === null || valu[i]===\"\"){\r\n                    break;\r\n                }\r\n                allIng.push(chabi[i])\r\n            }\r\n            for(let i = 29; i < 51; i++){\r\n                if(valu[i] === null || valu[i]===\"\"){\r\n                    break;\r\n                }\r\n                allmeasure.push(chabi[i])            \r\n            }\r\n            console.log(allIng);\r\n            this.setState({ \r\n                measuring : allmeasure,\r\n                ingredients : allIng\r\n            })\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div style={{marginTop:\"2%\"}}>\r\n\r\n                <div className=\"row shadow p-3 mb-5 bg-white rounded\"\r\n                style={{width:\"90%\",margin:\"auto\", justifyContent:\"center\", border:\"1px solid #d3d3d3\"}}>\r\n                    <h1 className=\"col-sm-12 text-center\"><b>{this.state.data.strMeal}</b></h1>\r\n                    <h3 className=\"col-sm-12 text-center\">\r\n                        <i>{this.state.data.strCategory} | {this.state.data.strArea} | {this.state.data.strTags}</i>\r\n                    </h3>\r\n\r\n                    <div className=\"col-sm-4 row mt-5\">\r\n                        <h4 className = \"col-sm-12\"><b>Ingredients</b></h4>\r\n                        <div className=\"col-sm-12 row\">\r\n                            <div className=\"text-center col-4\">\r\n                                {this.state.measuring.map((measure)=>(\r\n                                    <p>{this.state.data[measure]}</p>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"text-center col-8\">\r\n                                {this.state.ingredients.map((ingred)=>(\r\n                                    <p>{this.state.data[ingred]}</p>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4 mt-5\">\r\n                        <h4><b>Instructions</b></h4>\r\n                        <p>{this.state.data.strInstructions}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-4 mt-5\">\r\n                        <img src={this.state.data.strMealThumb} alt=\"thumbnail\" style={{width:\"100%\", height:\"auto\"}}/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Dessert\" sliced=\"4\" category=\"Dessert\"/>\r\n                <List url=\"https://www.themealdb.com/api/json/v1/1/filter.php?c=Chicken\" sliced=\"4\" category=\"Chicken\"/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recipe;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass Refresh extends Component{\r\n\r\n    render(){\r\n        if(isNaN(this.props.match.params.idmeal)){\r\n            return(\r\n                <Redirect to={'/search/'+this.props.match.params.idmeal}/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Redirect to={'/recipe/'+this.props.match.params.idmeal}/>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Refresh;","import React, {Component} from 'react';\r\n\r\nimport List from './list';\r\n\r\n\r\nclass CategoryItem extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List url={\"https://www.themealdb.com/api/json/v1/1/filter.php?c=\"+this.props.match.params.category} category={this.props.match.params.category} sliced=\"100\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryItem;","import React, {Component} from 'react';\r\n\r\nimport List from './list';\r\n\r\n\r\nclass Area extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <List url={\"https://www.themealdb.com/api/json/v1/1/filter.php?a=\"+this.props.match.params.area} category={this.props.match.params.area} sliced=\"100\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Area;","import React, {Component} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Areas extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            clicked:false,\r\n            finding:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://www.themealdb.com/api/json/v1/1/list.php?a=list\")\r\n        .then(response=>response.json())\r\n        .then(data=>this.setState({data:data.meals}))\r\n    }\r\n\r\n    find(area){\r\n        this.setState({\r\n            clicked:true,\r\n            finding:area\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.clicked){\r\n            return(<Redirect to={\"/area/\"+this.state.finding}/>)\r\n        }\r\n        return(\r\n            <div classNmae=\"row\" >\r\n                {this.state.data.map((datum)=>(\r\n                    <div className=\"col-sm-3 text-center mt-5 shadow p-3 bg-white rounded listHover\"\r\n                    style={{margin:\"auto\", width:\"100%\", height:\"auto\"}} \r\n                    onClick={()=>this.find(datum.strArea)}>\r\n                        {datum.strArea}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Areas;","import React, {Component} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass Ingredients extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            clicked:false,\r\n            finding:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\" https://www.themealdb.com/api/json/v1/1/list.php?i=list\")\r\n        .then(response=>response.json())\r\n        .then(data=>this.setState({data:data.meals}))\r\n    }\r\n\r\n    find(ing){\r\n        this.setState({\r\n            clicked:true,\r\n            finding:ing\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.clicked){\r\n            return(<Redirect to={\"/ingredient/\"+this.state.finding}/>)\r\n        }\r\n\r\n        return(\r\n            <div className=\"row\" style={{margin:\"auto\", justifyContent:\"center\", columnGap:\"2%\"}}>\r\n                {this.state.data.map((datum)=>(\r\n                    <div className=\"col-sm-5 mt-5 p-3 shadow bg-white rounded listHover\"\r\n                    onClick={()=>this.find(datum.strIngredient)}>\r\n                        <h3>{datum.strIngredient}</h3>\r\n                        <p>{datum.strDescription}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Ingredients;","import React,{Component} from 'react';\r\n\r\nimport List from './list';\r\n\r\nclass Ingredient extends Component{ \r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className=\"text-center\">{this.props.match.params.ingredient}</h1>\r\n                 <List url={\"https://www.themealdb.com/api/json/v1/1/filter.php?i=\"+this.props.match.params.ingredient.split(\" \").join(\"_\")} category={this.props.match.params.area} sliced=\"600\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Ingredient;","import React, {Component} from 'react';\r\n\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"card mt-5 shadow p-3 mb-5 bg-white rounded\" style={{heigh:\"auto\", width:\"100%\"}}>\r\n                <div className=\"card-body\">\r\n                    <h1 className=\"card-title\">About</h1>\r\n                    <p className=\"card-text\">\r\n                        This website, is a mockup of <a href=\"tasty.co\" trget=\"_blank\" rel=\"noopener noreferrer\">tasty.co</a>\r\n                         and backend APIs are consumed from \r\n                         <a href=\"https://www.themealdb.com/api.php\" target=\"_blank\" rel=\"noopener noreferrer\">www.themealdb.com/api.php</a>.\r\n                        The frontend is developed by using <b>React js</b>.<br/>Hope you'll Like it.<br/>\r\n                        Developer: <i>A.Zahir</i>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\n\r\nimport Landing from './landing';\r\nimport Search from './search';\r\nimport Category from './categories';\r\nimport Recipe from './recipe';\r\nimport Refresh from './refresh';\r\nimport CategoryItem from './category';\r\nimport Area from './area';\r\nimport Areas from './areas';\r\nimport Ingredients from './ingredients';\r\nimport Ingredient from './ingredient';\r\nimport About from './about';\r\n\r\n\r\nclass Routing extends Component{\r\n    render(){\r\n        return(\r\n            \r\n            <Switch>\r\n                <Route exact path={'/'} component={Landing}/>\r\n                <Route path={ '/search/:searched'} component={Search}/>\r\n                <Route path={ '/categories'} component={Category}/>\r\n                <Route path={ '/recipe/:idmeal'} component={Recipe}/>\r\n                <Route path={ '/refresh/:idmeal'} component={Refresh}/>\r\n                <Route path={ '/category/:category'} component={CategoryItem}/>\r\n                <Route path={ '/area/:area'} component={Area}/>\r\n                <Route path={ '/areas'} component={Areas}/>\r\n                <Route path={ '/ingredients'} component={Ingredients}/>\r\n                <Route path={ '/ingredient/:ingredient'} component={Ingredient}/>\r\n                <Route path={ '/about'} component={About}/>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Routing;","import React, {Component} from 'react';\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row bg-dark p-5 mt-3\" style={{margin:\"auto\",color:\"white\",width:\"100%\"}}>\r\n                <div className=\"col-sm-6 text-center\">\r\n                    <span>This frontend is a mockup of </span> <a href=\"tasty.co\" target=\"_blank\" rel=\"noopener noreferrer\">Tasty.co</a>\r\n                </div>\r\n\r\n                <div className=\"col-sm-6 text-center\">\r\n                    <span>Backend APIs are consumed from </span><a href=\"https://www.themealdb.com/api.php\" rel=\"noopener noreferrer\" target=\"_blank\">www.themealdb.com</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\n\nimport NavbarHead from './components/navbar';\nimport Routing from './components/routing';\nimport Footer from './components/footer';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div>\n      <NavbarHead/>\n      <div className=\"mt-5\"><Routing/></div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL+\"/#/\"}>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}